<Window x:Class="MoneyCalendar.Windows.MonthlyExpensesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MoneyCalendar.Windows" xmlns:data="clr-namespace:MoneyCalendar.Data"
        mc:Ignorable="d"
        
        FontSize="16"
        WindowStartupLocation="CenterOwner"
        Icon="..\Images\Budget.png"               
        Title="Monthly Expenses" Height="800" Width="900">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="10">
            <Grid.Resources>
                <Style TargetType="Control" x:Key="ControlStyle">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="Label" BasedOn="{StaticResource ControlStyle}" />
                <Style TargetType="ComboBox" BasedOn="{StaticResource ControlStyle}" />
                <Style TargetType="DatePicker" >
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Width" Value="125" />
                </Style>
            </Grid.Resources>

            <WrapPanel >
                <Label Content="Start Date" />
                <DatePicker SelectedDate="{Binding StartDate}" CalendarStyle="{StaticResource LargeCalendarStyle}" />

                <Label Content="End Date" />
                <DatePicker SelectedDate="{Binding EndDate}" CalendarStyle="{StaticResource LargeCalendarStyle}" />
            </WrapPanel>

            <WrapPanel HorizontalAlignment="Right" >
                <Label Content="Previous Months" />
                <ComboBox Width="250" ItemsSource="{Binding MonthlyExpenseSets}" DisplayMemberPath="DisplayText" />
            </WrapPanel>
        </Grid>
        
        <DataGrid Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding MonthlyExpenses}" CellEditEnding="DataGrid_CellEditEnding" RowEditEnding="DataGrid_RowEditEnding"  CanUserAddRows="False" 
                  VerticalContentAlignment="Center">
            <DataGrid.Columns>
                <!--<DataGridTextColumn Header="Type" Binding="{Binding TypeName}" IsReadOnly="True" />
                <DataGridTextColumn Header="Bill" Binding="{Binding BillName}" IsReadOnly="True" />-->

                <DataGridTextColumn Header="Description" Binding="{Binding Description}" IsReadOnly="True" /> 

                <DataGridCheckBoxColumn Header="Include" Binding="{Binding IsIncluded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style>
                            <EventSetter Event="CheckBox.Checked" Handler="Include_Checked"/>
                            <EventSetter Event="CheckBox.Unchecked" Handler="Include_Checked"/>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style>
                            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Header="Amount"  Binding="{Binding Amount, StringFormat=c}" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextBoxStyle}" />

                <DataGridTextColumn Header="Split Rate" Width="45"
                        Binding="{Binding SplitRate, Converter={StaticResource PercentToStringConverter}, ConverterParameter=P0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        ElementStyle="{StaticResource RightAlignedTextBoxStyle}" >
                    <DataGridTextColumn.CellStyle>
                        <Style>
                            <EventSetter Event="TextBox.TextChanged" Handler="Include_Checked" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Split Amount" IsReadOnly="True" Width="75"
                        HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" 
                        Binding="{Binding SplitAmount, StringFormat=c}" 
                        ElementStyle="{StaticResource RightAlignedTextBoxStyle}" />

                <DataGridCheckBoxColumn Header="Joint" Binding="{Binding IsJointExpense, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style>
                            <EventSetter Event="CheckBox.Checked" Handler="Include_Checked"/>
                            <EventSetter Event="CheckBox.Unchecked" Handler="Include_Checked"/>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                    <DataGridCheckBoxColumn.ElementStyle>
                        <Style>
                            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
                        </Style>
                    </DataGridCheckBoxColumn.ElementStyle>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Header="Joiner Amount" Width="75"
                        HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" 
                        Binding="{Binding JoinerAmount, StringFormat=c, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        ElementStyle="{StaticResource RightAlignedTextBoxStyle}" >
                    <DataGridTextColumn.CellStyle>
                        <Style>
                            <Setter Property="UIElement.IsEnabled" Value="{Binding IsJointExpense}" />
                            <EventSetter Event="TextBox.TextChanged" Handler="Include_Checked" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Contribution" Width="100"
                        HeaderStyle="{StaticResource WrappedColumnHeaderStyle}" 
                        Binding="{Binding Contribution, StringFormat=c, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        ElementStyle="{StaticResource RightAlignedTextBoxStyle}" >
                    <DataGridTextColumn.CellStyle>
                        <Style>
                            <EventSetter Event="TextBox.TextChanged" Handler="Include_Checked" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Owed" Width="75" Binding="{Binding OwedAmount, StringFormat=c}" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextBoxStyle}" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="2" Margin="10">
            <Grid.Resources>
                <Style TargetType="Control" x:Key="ControlStyle">
                    <Setter Property="Margin" Value="4 0 4 0" />
                    <Setter Property="FontSize" Value="18" />
                </Style>
                <Style TargetType="Label" BasedOn="{StaticResource ControlStyle}" />
                <Style TargetType="TextBox" BasedOn="{StaticResource ControlStyle}" >
                    <Setter Property="Width" Value="110" />
                </Style>
            </Grid.Resources>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Expenses Total" />
            <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding TotalAmount, StringFormat=c}" IsReadOnly="True" TextAlignment="Right" />

            <Label Grid.Row="0" Grid.Column="1" Content="Split Total" />
            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding TotalSplitAmount, StringFormat=c}" IsReadOnly="True" TextAlignment="Right" />

            <Label Grid.Row="0" Grid.Column="2" Content="Owed" />
            <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding TotalOwedAmount, StringFormat=c}" IsReadOnly="True" TextAlignment="Right" />

            <WrapPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                <WrapPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="FontSize" Value="24" />
                    </Style>
                </WrapPanel.Resources>
                <Button Content="Cancel" Command="{Binding CloseWithoutSaveCommand}" />
                <Button Content="Save" Command="{Binding SaveMonthlyExpensesCommand}" />
            </WrapPanel>
        </Grid>
    </Grid>
</Window>
