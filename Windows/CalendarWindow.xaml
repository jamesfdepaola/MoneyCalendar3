<RibbonWindow  x:Class="MoneyCalendar.Windows.CalendarWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:MoneyCalendar"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"               
        xmlns:ignore="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        mc:Ignorable="ignore"
        xmlns:moneywindows="clr-namespace:MoneyCalendar.Windows"        
        
        xmlns:rdlcreport="clr-namespace:Microsoft.Reporting.WinForms;assembly=Microsoft.ReportViewer.WinForms"                      
               
    x:Name="calendarwindow"
               
        Icon="..\Images\MC.ico"               
        Title="Money Calendar" Height="1000" Width="1500"
        PreviewKeyDown="CalendarWindow_PreviewKeyDown"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing" >

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="120" />
        </Grid.RowDefinitions>

        <Ribbon x:Name="ribbonMain" SelectionChanged="Ribbon_SelectionChanged" >
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>

                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Info">
                <RibbonGroup>
                    <RibbonButton Label="New" LargeImageSource="..\Images\NewTransaction.png" Command="{Binding StartNewTransactionCommand}" Click="Menu_NewTransaction_Click" />
                    <RibbonButton Label="Batch New" LargeImageSource="..\Images\NewTransactionBatch.png" Click="Menu_NewTransactionBatch_Click" />
                    <RibbonSeparator/>
                    <RibbonButton Label="Cut" LargeImageSource="..\Images\Cut.png" Command="{Binding CutSelectedTransactionCommand}" />
                    <RibbonButton Label="Copy" LargeImageSource="..\Images\Copy.png" Command="{Binding CopySelectedTransactionCommand}" />
                    <RibbonSplitButton Label="Paste" LargeImageSource="..\Images\Paste.png" 
                            Command="{Binding PasteSelectedTransactionCommand}"
                            IsEnabled="{Binding HasCopiedTransaction}" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Grid.Resources>
                                <Style TargetType="Control" x:Key="ControlBaseStyle">
                                    <Setter Property="Margin" Value="-4 -4 5 -4" />
                                    <Setter Property="FontSize" Value="14" />
                                </Style>

                                <Style TargetType="Label" BasedOn="{StaticResource ControlBaseStyle}">
                                    <Setter Property="MinWidth" Value="65" />
                                </Style>
                                <Style TargetType="TextBox" BasedOn="{StaticResource ControlBaseStyle}">
                                    <Setter Property="IsReadOnly" Value="True" />
                                    <!--<Setter Property="TextAlignment" Value="Right" />-->
                                    <Setter Property="Height" Value="20" />

                                    <Setter Property="MinWidth" Value="70" />
                                </Style>
                            </Grid.Resources>

                            <Label Grid.Row="0" Grid.Column="0" Content="Copied Transaction" FontSize="17" FontWeight="Bold" Grid.ColumnSpan="4" Width="auto" />

                            <Label Grid.Row="1" Grid.Column="0" Content="Date" />
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CopiedTransaction.TransactionDate, StringFormat={}yyyy-MM-dd}"  />

                            <Label Grid.Row="2" Grid.Column="0" Content="Type" />
                            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding CopiedTransaction.TransactionType.Name}" />

                            <Label Grid.Row="1" Grid.Column="2" Content="Amount" />
                            <TextBox Grid.Row="1" Grid.Column="3" TextAlignment="Right" Text="{Binding CopiedTransaction.Amount,StringFormat=c}" />

                            <Label Grid.Row="2" Grid.Column="2" Content="Venue" />
                            <TextBox Grid.Row="2" Grid.Column="3" TextAlignment="Right" Text="{Binding CopiedTransaction.Venue}" />

                            <Label Grid.Row="1" Grid.Column="4" Content="Description" />
                            <TextBox Grid.Row="1" Grid.Column="5" Grid.RowSpan="2" MinLines="2" TextWrapping="Wrap" Height="40" Width="200"
                                Text="{Binding CopiedTransaction.Description}" />
                        </Grid>
                    </RibbonSplitButton>
                </RibbonGroup>
                
                <RibbonGroup>
                    <RibbonButton Label="Load Due Dates" LargeImageSource="..\Images\LoadDueDates.png" Click="Menu_OpenLoadDueDates_Click" />

                    <RibbonButton Label="Monthly Expenses" LargeImageSource="..\Images\Budget.png" Click="Menu_OpenMonthlyExpenses_Click" />
                </RibbonGroup>

                <RibbonGroup>
                    <RibbonButton Label="Accounts" LargeImageSource="..\Images\Accounts.png" Click="Menu_OpenAccounts_Click" />
                    <RibbonButton Label="Bills" LargeImageSource="..\Images\Bills.png" Click="Menu_OpenBills_Click" />
                </RibbonGroup>

                <RibbonGroup>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.Resources>
                            <Style TargetType="Control" x:Key="ControlBaseStyle">
                                <Setter Property="Margin" Value="10 0 10 0" />
                                <Setter Property="FontSize" Value="18" />
                            </Style>

                            <Style TargetType="Label" BasedOn="{StaticResource ControlBaseStyle}">

                            </Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource ControlBaseStyle}">
                                <Setter Property="IsReadOnly" Value="True" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="Width" Value="100" />
                            </Style>
                        </Grid.Resources>

                        <Label Grid.Row="0" Grid.Column="0" Content="Balance" />
                        <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding SelectedAccountTotals.CurrentBalance,StringFormat=c}"  />

                        <Label Grid.Row="0" Grid.Column="1" Content="Posted" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedAccountTotals.CompletedSum,StringFormat=c}" />

                        <Label Grid.Row="0" Grid.Column="2" Content="Selected Date Balance" />
                        <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding SelectedAccountTotals.SelectedDateDueBalance,StringFormat=c}" />
                    </Grid>
                </RibbonGroup>

                <RibbonGroup>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Grid.Resources>
                            <Style TargetType="Control" x:Key="ControlBaseStyle">
                                <Setter Property="FontSize" Value="18" />
                            </Style>

                            <Style TargetType="Label" BasedOn="{StaticResource ControlBaseStyle}" />
                            <Style TargetType="TextBox" BasedOn="{StaticResource ControlBaseStyle}" />
                            <Style TargetType="ComboBox" BasedOn="{StaticResource ControlBaseStyle}" />
                            <Style TargetType="Button" BasedOn="{StaticResource ControlBaseStyle}" />
                        </Grid.Resources>

                        <Label Grid.Row="0" Grid.Column="0" Content="Type" />
                        <ComboBox Grid.Row="1" Grid.Column="0" Width="150" DisplayMemberPath="Name" SelectedValuePath="TypeID"
                                ItemsSource="{Binding TransactionTypes}"                                                                  
                                SelectedValue="{Binding QuickSortTypeID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />

                        <Label Grid.Row="0" Grid.Column="1" Content="Venue/Description/Bill" Margin="10 0 0 0" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding QuickSortText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200" Margin="10 0 0 0"  />

                        <Button Grid.RowSpan="2" Grid.Column="2" Content="Clear" VerticalAlignment="Center" Margin="10 10 0 0" Padding="5 0" Command="{Binding ClearQuickSortCommand}"/> 
                    </Grid>
                </RibbonGroup>
            </RibbonTab>

            <RibbonTab Header="Search">
                <RibbonGroup>
                    <Label Grid.Row="0" Grid.Column="2" Content="Selected Date Due Balance" />
                    <TextBox Grid.Row="1" Grid.Column="2" Text="{Binding SelectedAccountTotals.SelectedDateBalance,StringFormat=c}" />
                </RibbonGroup>
            </RibbonTab>

            <RibbonTab Header="Reports" x:Name="ribbontabReports" >
                
            </RibbonTab>
        </Ribbon>

        <Grid Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ComboBox x:Name="cboAccounts" AllowDrop="True" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Width="300" 
                    DragOver="cboAccounts_DragOver" 
                    IsDropDownOpen="{Binding ShowSelectedTransactionAccountList}"
                    ItemsSource="{Binding AccountBalances}"
                    SelectedItem="{Binding SelectedAccountBalance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ComboBox.ItemContainerStyle>

                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="White" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGroupSelection}" Value="True">
                                        <Setter Property="Background" Value="LightBlue"/>
                                    </DataTrigger>

                                    <!--(NOTE: the element that is selected and displayed in the box and not the list is not inside a ComboBoxItem hence the trigger on Null)-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}}" Value="{x:Null}">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="True">
                                        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataTemplate.Resources>

                        <Border>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" HorizontalAlignment="Stretch" Margin="5 0 0 0" AllowDrop="True"
                                        Text="{Binding AccountName}"                                        
                                        Tag="{Binding}"
                                        DragOver="AccountItem_DragOver" Drop="AccountItem_Drop" >
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}}" Value="{x:Null}">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsGroupSelection}" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Grid.Column="1" Text="{Binding DisplayAmount, StringFormat=c}" Margin="30 0 5 0" TextAlignment="Right" >
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="Black" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Balance, Converter={StaticResource NumberIsNegativeConverter}}" Value="True">
                                                    <Setter Property="Foreground" Value="Red" />
                                                </DataTrigger>

                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Path=IsSelected}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>

                                                        <!--<Setter Property="Visibility" Value="Collapsed"/>-->
                                                        <Setter Property="Foreground" Value="White" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBoxItem}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <Grid Grid.Column="1" HorizontalAlignment="Center" Margin="10">
                <Grid.Resources>
                    <sys:Double x:Key="DateSelectionFontSize">30</sys:Double>

                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="{StaticResource DateSelectionFontSize}" />
                    </Style>
                    <Style TargetType="ComboBox" >
                        <Setter Property="FontSize" Value="{StaticResource DateSelectionFontSize}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" Text="Month" Margin="0 0 10 0" />
                <ComboBox Grid.Column="2" Width="175" MaxDropDownHeight="700" SelectedValuePath="Key" DisplayMemberPath="Value" 
                        ItemsSource="{Binding Months}"
                        SelectedValue="{Binding SelectedMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="3" Text="Year" Margin="10 0 10 0" />
                <ComboBox Grid.Column="4" Width="100" 
                        ItemsSource="{Binding Years}"                      
                        SelectedValue="{Binding SelectedYear, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </Grid>

        <ItemsControl Grid.Row="2" ItemsSource="{Binding WeekDays}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="7" Rows="1" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type sys:String}">
                    <TextBlock Text="{Binding}" HorizontalAlignment="Center" FontSize="18" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <DataGrid Grid.Row="3" ItemsSource="{Binding Transactions}" Visibility="{Binding ShowDataGrid, Converter={StaticResource BooleanToVisibilityConverter}}">

        </DataGrid>

        <ItemsControl Grid.Row="3" Height="auto" x:Name="itemsDateSets"
                MouseDown="Grid_MouseDown"
                MouseUp="Grid_MouseUp"
                MouseMove="Grid_MouseMove"
                Visibility="{Binding ShowCalendar, Converter={StaticResource BooleanToVisibilityConverter}}"                
                ItemsSource="{Binding DatedTransactionSets}" >
            <ItemsControl.Resources>
                <Style TargetType="CheckBox">
                    <Setter Property="Command" Value="{Binding ElementName=itemsDateSets, Path=DataContext.SaveSelectedTransactionCommand}" />
                </Style>
            </ItemsControl.Resources>
            
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="7" Rows="5" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="DatedTransactionSet">
                    <DataTemplate.Resources>
                        <Style TargetType="ListView">
                            <Setter Property="Background" Value="LemonChiffon" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SetDate.Month, Converter={StaticResource NumberIsEvenConverter}}" Value="True">
                                    <Setter Property="Background" Value="PaleGoldenrod" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsCalendarSelectedDate}" Value="True">
                                    <Setter Property="Background" Value="LightCyan" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataTemplate.Resources>

                    <Border BorderThickness=".5" BorderBrush="Black"  >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <ListView Grid.Row="0" PreviewMouseDown="DatedListView_PreviewMouseDown" AllowDrop="True"
                                    MouseMove="DatedListView_MouseMove" DragOver="DatedListView_DragOver" Drop="DatedListView_Drop"
                                    MouseDoubleClick="DatedListView_MouseDoubleClick"
                                    PreviewMouseWheel="DatedListView_PreviewMouseWheel" ContextMenuOpening="DatedListView_ContextMenuOpening" 
                                    ItemsSource="{Binding SetTransactions}" 
                                    SelectedItem="{Binding SelectedSetTransaction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                <ListView.Resources>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="ToolTipService.ToolTip" Value="{Binding FullDescription}" />
                                        <Setter Property="Background" Value="{Binding StatusColor}" />
                                    </Style>
                                </ListView.Resources>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            
                                            <CheckBox Grid.Column="0" IsChecked="{Binding IsCompleted}" VerticalAlignment="Center" Margin="0 2 4 2"
                                                    Visibility="{Binding TransactionType.IsDueType, Converter={StaticResource NegateBooleanToVisibilityConverter}}" />
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding DisplayText}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="placeholder" />
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>

                            <TextBlock TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Right" FontSize="16" FontWeight="Bold"
                                    Background="{Binding SetDate, Converter={StaticResource CurrentDateBackgroundConverter}}"
                                    Text="{Binding SetDate.Day}" >
                            </TextBlock>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Canvas>
            <Rectangle x:Name="selectionBox" Visibility="Collapsed" Stroke="Black" StrokeThickness="1" />
        </Canvas>

        <GroupBox x:Name="grpSelectedTransaction" x:FieldModifier="private" Grid.Row="4" Margin="10" 
                Visibility="{Binding ShowSelectedTransactionPanel, Converter={StaticResource BooleanToVisibilityConverter}}">
            <GroupBox.Header>
                <WrapPanel>
                    <TextBlock Text="Selected Transaction" Visibility="{Binding SelectedTransactionIsNew, Converter={StaticResource NegateBooleanToVisibilityConverter}}"/>
                    <TextBlock Text="New Transaction" Visibility="{Binding SelectedTransactionIsNew, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </WrapPanel>
            </GroupBox.Header>

            <Grid Visibility="{Binding SelectedTransaction, Converter={StaticResource HideEmptyValueConverter}, ConverterParameter=wtf, Mode=OneWay}" >
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="20 10 0 0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>

                    <Style TargetType="Control" x:Key="SelectedTransactionControlStyle" >
                        <Setter Property="Margin" Value="0 10 0 0" />
                        <Setter Property="MinWidth" Value="60"/>
                        <Setter Property="Height" Value="auto"/>
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource SelectedTransactionControlStyle}" />
                    <Style TargetType="DatePicker" BasedOn="{StaticResource SelectedTransactionControlStyle}" />
                    <Style TargetType="ComboBox" BasedOn="{StaticResource SelectedTransactionControlStyle}" />
                    <Style TargetType="CheckBox" BasedOn="{StaticResource SelectedTransactionControlStyle}" >
                        <Setter Property="Margin" Value="20 10 0 0" />
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Column="0" Margin="0 0 30 0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="170"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Date" />
                    <DatePicker Grid.Row="0" Grid.Column="1" Text="{Binding SelectedTransactionDate, StringFormat=d, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Type" />
                    <ComboBox x:Name="cboSelectedTransactionType" Grid.Row="1" Grid.Column="1" Selector.SelectionChanged="cboSelectedTransactionType_Selected"
                            moneywindows:AttachedProperties.IsFocused="{Binding SelectedTransactionTypeIsFocused}" 
                            IsDropDownOpen="{Binding ShowSelectedTransactionTypeList}"
                            ItemsSource="{Binding TransactionTypes}" 
                            SelectedItem="{Binding SelectedTransactionType}"        
                            SelectedValue="{Binding SelectedTransaction.TypeID}"
                            SelectedValuePath="TypeID"
                            DisplayMemberPath="Name" />

                    <!--#region  Transfers-->
                    <Grid Grid.Row="0" Grid.Column="2" 
                            Visibility="{Binding ShowSelectedTransactionTransferProperties, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Transfer From" Width="80" />
                        <ComboBox Grid.Column="1" Width="140" Margin="10 10 0 0" 
                            ItemsSource="{Binding AccountSelectionList, Mode=OneWay}" 
                            SelectedValue="{Binding SelectedTransactionTransferFromAccountID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="AccountID"
                            DisplayMemberPath="AccountName" />
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="2" 
                            Visibility="{Binding ShowSelectedTransactionTransferProperties, Converter={StaticResource BooleanToVisibilityConverter}}" >

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Transfer To" Width="80" />
                        <ComboBox Grid.Column="1" Width="140" Margin="10 10 0 0" 
                            ItemsSource="{Binding AccountSelectionList, Mode=OneWay}" 
                            SelectedValue="{Binding SelectedTransactionTransferToAccountID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="AccountID"
                            DisplayMemberPath="AccountName" />
                    </Grid>
                    <!--#endregion-->
                    
                    <!--#region Bill-->
                    <Grid Grid.Row="0" Grid.Column="2" 
                          Visibility="{Binding SelectedTransactionTypeIsBillType, Converter={StaticResource BooleanToVisibilityConverter}}" >
                            <!--Visibility="{Binding SelectedTransaction.BillID, Converter={StaticResource HideEmptyValueConverter}}" >-->

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Bill" />
                        <ComboBox Grid.Column="1" Width="140" Margin="10 10 0 0" 
                            ItemsSource="{Binding Bills}" 
                            SelectedValue="{Binding SelectedTransaction.BillID}"
                            SelectedValuePath="BillID"
                            DisplayMemberPath="Name" />
                    </Grid>
                    <!--#endregion-->
                    
                    <!--#region Earner and Job-->
                    <Grid Grid.Row="0" Grid.Column="2" 
                          Visibility="{Binding SelectedTransactionTypeIsPaycheckType, Converter={StaticResource BooleanToVisibilityConverter}}" >
                            <!--Visibility="{Binding SelectedTransaction.EarnerID, Converter={StaticResource HideEmptyValueConverter}}" >-->

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Earner" />
                        <ComboBox Grid.Column="1" Width="140" Margin="10 10 0 0" 
                            ItemsSource="{Binding Earners}" 
                            SelectedValue="{Binding SelectedTransaction.EarnerID}"
                            SelectedValuePath="EarnerID"
                            DisplayMemberPath="Name" />
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="2" 
                          Visibility="{Binding SelectedTransactionTypeIsPaycheckType, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <!--Visibility="{Binding SelectedTransaction.EarnerID, Converter={StaticResource HideEmptyValueConverter}}" >-->

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Job" />
                        <ComboBox Grid.Column="1" Width="140" Margin="10 10 0 0" 
                            ItemsSource="{Binding Jobs}" 
                            SelectedValue="{Binding SelectedTransaction.JobID}"
                            SelectedValuePath="JobID"
                            DisplayMemberPath="Employer" />
                    </Grid>
                    <!--#endregion-->
                    
                    <Grid Grid.Row="0" Grid.Column="3" >
                        <Grid.Visibility>
                            <MultiBinding Converter="{StaticResource BooleanNorToVisibilityConverter}" >
                                <Binding  Path="SelectedTransaction.TransactionType.IsDueType" />
                            </MultiBinding>
                        </Grid.Visibility>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Amount" />

                        <TextBox Grid.Column="1" x:Name="txtSelectedTransactionAmount" 
                                GotKeyboardFocus="AutoSelectAllTextBox_GotKeyboardFocus" GotMouseCapture="AutoSelectAllTextBox_GotMouseCapture"
                                Visibility="{Binding SelectedTransaction.TransactionType.IsDueType,Converter={StaticResource NegateBooleanToVisibilityConverter}}"
                                Text="{Binding SelectedTransactionAmount, StringFormat=c, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="3" Visibility="{Binding SelectedTransaction.TransactionType.IsDueType, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Due Amount" 
                            Visibility="{Binding SelectedTransaction.TransactionType.IsDueType,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox Grid.Column="1" x:Name="txtSelectedTransactionDueAmount" Width="70" TextAlignment="Right" VerticalContentAlignment="Center"
                            Visibility="{Binding SelectedTransaction.TransactionType.IsDueType,Converter={StaticResource BooleanToVisibilityConverter}}"
                            Text="{Binding SelectedTransaction.DueAmount, StringFormat=c, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="3" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Venue" />

                        <TextBox Grid.Column="1" 
                                GotKeyboardFocus="AutoSelectAllTextBox_GotKeyboardFocus" GotMouseCapture="AutoSelectAllTextBox_GotMouseCapture"
                                Text="{Binding SelectedTransaction.Venue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="Description" HorizontalAlignment="Left" Margin="0" />
                    <TextBox Grid.Row="1" x:Name="txtSelectedTransactionDescription" Width="300" TextWrapping="Wrap" AcceptsReturn="True" MinLines="3" Grid.RowSpan="3" Margin="0" 
                            Text="{Binding SelectedTransactionDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=d d }" />
                </Grid>

                <Grid Grid.Column="2">
                    <CheckBox Content="Posted" 
                            Visibility="{Binding SelectedTransaction.TransactionType.IsDueType,Converter={StaticResource NegateBooleanToVisibilityConverter}}"
                            IsChecked="{Binding SelectedTransaction.IsCompleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>

                <StackPanel Grid.Column="3" Margin="10" >
                    <StackPanel.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Padding" Value="5 0 5 0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="20" />
                        </Style>
                    </StackPanel.Resources>

                    <Button Content="Save" Margin="0 0 0 5" 
                            Command="{Binding SaveSelectedTransactionCommand}" />
                    <Button Content="Cancel" IsCancel="True" 
                            Command="{Binding CancelChangesCommand}" />
                </StackPanel>

                <WrapPanel Grid.Column="4">
                    <TextBox Text="{Binding SelectedTransaction.TransactionID}" IsReadOnly="True" BorderBrush="Transparent" />
                </WrapPanel>
            </Grid>
        </GroupBox>

        <WindowsFormsHost Name="windowsFormsHost1" Grid.Row="3" Grid.RowSpan="2"
                Visibility="{Binding ShowReport, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">

            <rdlcreport:ReportViewer x:Name="ReportViewer" x:FieldModifier="private" />
        </WindowsFormsHost>
    </Grid>
</RibbonWindow>
